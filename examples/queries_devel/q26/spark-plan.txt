Query 26 =================================================

SELECT
  ss.ss_customer_sk AS cid,
  count(CASE WHEN i.i_class_id=1  THEN 1 ELSE NULL END) AS id1,
  count(CASE WHEN i.i_class_id=2  THEN 1 ELSE NULL END) AS id2,
  count(CASE WHEN i.i_class_id=3  THEN 1 ELSE NULL END) AS id3,
  count(CASE WHEN i.i_class_id=4  THEN 1 ELSE NULL END) AS id4,
  count(CASE WHEN i.i_class_id=5  THEN 1 ELSE NULL END) AS id5,
  count(CASE WHEN i.i_class_id=6  THEN 1 ELSE NULL END) AS id6,
  count(CASE WHEN i.i_class_id=7  THEN 1 ELSE NULL END) AS id7,
  count(CASE WHEN i.i_class_id=8  THEN 1 ELSE NULL END) AS id8,
  count(CASE WHEN i.i_class_id=9  THEN 1 ELSE NULL END) AS id9,
  count(CASE WHEN i.i_class_id=10 THEN 1 ELSE NULL END) AS id10,
  count(CASE WHEN i.i_class_id=11 THEN 1 ELSE NULL END) AS id11,
  count(CASE WHEN i.i_class_id=12 THEN 1 ELSE NULL END) AS id12,
  count(CASE WHEN i.i_class_id=13 THEN 1 ELSE NULL END) AS id13,
  count(CASE WHEN i.i_class_id=14 THEN 1 ELSE NULL END) AS id14,
  count(CASE WHEN i.i_class_id=15 THEN 1 ELSE NULL END) AS id15
FROM store_sales_table ss
INNER JOIN item_table i 
  ON (ss.ss_item_sk = i.i_item_sk AND i.i_category IN ('Music')
  AND ss.ss_customer_sk IS NOT NULL
)
GROUP BY ss.ss_customer_sk
HAVING count(ss.ss_item_sk) > 10
ORDER BY cid

================================================================
== Parsed Logical Plan ==
'Sort ['cid ASC], true
+- 'Filter ('count('ss.ss_item_sk) > 10)
   +- 'Aggregate ['ss.ss_customer_sk], [unresolvedalias('ss.ss_customer_sk AS cid#45),unresolvedalias('count(CASE WHEN ('i.i_class_id = 1) THEN 1 ELSE null) AS id1#46),unresolvedalias('count(CASE WHEN ('i.i_class_id = 2) THEN 1 ELSE null) AS id2#47),unresolvedalias('count(CASE WHEN ('i.i_class_id = 3) THEN 1 ELSE null) AS id3#48),unresolvedalias('count(CASE WHEN ('i.i_class_id = 4) THEN 1 ELSE null) AS id4#49),unresolvedalias('count(CASE WHEN ('i.i_class_id = 5) THEN 1 ELSE null) AS id5#50),unresolvedalias('count(CASE WHEN ('i.i_class_id = 6) THEN 1 ELSE null) AS id6#51),unresolvedalias('count(CASE WHEN ('i.i_class_id = 7) THEN 1 ELSE null) AS id7#52),unresolvedalias('count(CASE WHEN ('i.i_class_id = 8) THEN 1 ELSE null) AS id8#53),unresolvedalias('count(CASE WHEN ('i.i_class_id = 9) THEN 1 ELSE null) AS id9#54),unresolvedalias('count(CASE WHEN ('i.i_class_id = 10) THEN 1 ELSE null) AS id10#55),unresolvedalias('count(CASE WHEN ('i.i_class_id = 11) THEN 1 ELSE null) AS id11#56),unresolvedalias('count(CASE WHEN ('i.i_class_id = 12) THEN 1 ELSE null) AS id12#57),unresolvedalias('count(CASE WHEN ('i.i_class_id = 13) THEN 1 ELSE null) AS id13#58),unresolvedalias('count(CASE WHEN ('i.i_class_id = 14) THEN 1 ELSE null) AS id14#59),unresolvedalias('count(CASE WHEN ('i.i_class_id = 15) THEN 1 ELSE null) AS id15#60)]
      +- 'Join Inner, Some(((('ss.ss_item_sk = 'i.i_item_sk) && 'i.i_category IN (Music)) && isnotnull('ss.ss_customer_sk)))
         :- 'UnresolvedRelation `store_sales_table`, Some(ss)
         +- 'UnresolvedRelation `item_table`, Some(i)

== Analyzed Logical Plan ==
cid: int, id1: bigint, id2: bigint, id3: bigint, id4: bigint, id5: bigint, id6: bigint, id7: bigint, id8: bigint, id9: bigint, id10: bigint, id11: bigint, id12: bigint, id13: bigint, id14: bigint, id15: bigint
Sort [cid#45 ASC], true
+- Project [cid#45,id1#46L,id2#47L,id3#48L,id4#49L,id5#50L,id6#51L,id7#52L,id8#53L,id9#54L,id10#55L,id11#56L,id12#57L,id13#58L,id14#59L,id15#60L]
   +- Filter havingCondition#61: boolean
      +- Aggregate [ss_customer_sk#3], [((count(ss_item_sk#2),mode=Complete,isDistinct=false) > cast(10 as bigint)) AS havingCondition#61,ss_customer_sk#3 AS cid#45,(count(CASE WHEN (i_class_id#32 = 1) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id1#46L,(count(CASE WHEN (i_class_id#32 = 2) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id2#47L,(count(CASE WHEN (i_class_id#32 = 3) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id3#48L,(count(CASE WHEN (i_class_id#32 = 4) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id4#49L,(count(CASE WHEN (i_class_id#32 = 5) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id5#50L,(count(CASE WHEN (i_class_id#32 = 6) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id6#51L,(count(CASE WHEN (i_class_id#32 = 7) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id7#52L,(count(CASE WHEN (i_class_id#32 = 8) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id8#53L,(count(CASE WHEN (i_class_id#32 = 9) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id9#54L,(count(CASE WHEN (i_class_id#32 = 10) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id10#55L,(count(CASE WHEN (i_class_id#32 = 11) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id11#56L,(count(CASE WHEN (i_class_id#32 = 12) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id12#57L,(count(CASE WHEN (i_class_id#32 = 13) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id13#58L,(count(CASE WHEN (i_class_id#32 = 14) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id14#59L,(count(CASE WHEN (i_class_id#32 = 15) THEN 1 ELSE cast(null as int)),mode=Complete,isDistinct=false) AS id15#60L]
         +- Join Inner, Some((((ss_item_sk#2 = i_item_sk#23) && i_category#35 IN (Music)) && isnotnull(ss_customer_sk#3)))
            :- Subquery ss
            :  +- Subquery store_sales_table
            :     +- Relation[ss_sold_date_sk#0,ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22] CsvRelation(<function0>,Some(/home/whassan/tmp/csv/store_sales.csv),true,,,",null,#,PERMISSIVE,COMMONS,false,false,false,StructType(StructField(ss_sold_date_sk,IntegerType,true), StructField(ss_sold_time_sk,IntegerType,true), StructField(ss_item_sk,IntegerType,true), StructField(ss_customer_sk,IntegerType,true), StructField(ss_cdemo_sk,IntegerType,true), StructField(ss_hdemo_sk,IntegerType,true), StructField(ss_addr_sk,IntegerType,true), StructField(ss_store_sk,IntegerType,true), StructField(ss_promo_sk,IntegerType,true), StructField(ss_ticket_number,IntegerType,true), StructField(ss_quantity,IntegerType,true), StructField(ss_wholesale_cost,DoubleType,true), StructField(ss_list_price,DoubleType,true), StructField(ss_sales_price,DoubleType,true), StructField(ss_ext_discount_amt,DoubleType,true), StructField(ss_ext_sales_price,DoubleType,true), StructField(ss_ext_wholesale_cost,DoubleType,true), StructField(ss_ext_list_price,DoubleType,true), StructField(ss_ext_tax,DoubleType,true), StructField(ss_coupon_amt,DoubleType,true), StructField(ss_net_paid,DoubleType,true), StructField(ss_net_paid_inc_tax,DoubleType,true), StructField(ss_net_profit,DoubleType,true)),false,null,,null)
            +- Subquery i
               +- Subquery item_table
                  +- Relation[i_item_sk#23,i_item_id#24,i_rec_start_date#25,i_rec_end_date#26,i_item_desc#27,i_current_price#28,i_wholesale_cost#29,i_brand_id#30,i_brand#31,i_class_id#32,i_class#33,i_category_id#34,i_category#35,i_manufact_id#36,i_manufact#37,i_size#38,i_formulation#39,i_color#40,i_units#41,i_container#42,i_manager_id#43,i_product_name#44] CsvRelation(<function0>,Some(/home/whassan/tmp/csv/item.csv),true,,,",null,#,PERMISSIVE,COMMONS,false,false,false,StructType(StructField(i_item_sk,IntegerType,true), StructField(i_item_id,StringType,true), StructField(i_rec_start_date,StringType,true), StructField(i_rec_end_date,StringType,true), StructField(i_item_desc,StringType,true), StructField(i_current_price,DoubleType,true), StructField(i_wholesale_cost,DoubleType,true), StructField(i_brand_id,IntegerType,true), StructField(i_brand,StringType,true), StructField(i_class_id,IntegerType,true), StructField(i_class,StringType,true), StructField(i_category_id,IntegerType,true), StructField(i_category,StringType,true), StructField(i_manufact_id,IntegerType,true), StructField(i_manufact,StringType,true), StructField(i_size,StringType,true), StructField(i_formulation,StringType,true), StructField(i_color,StringType,true), StructField(i_units,StringType,true), StructField(i_container,StringType,true), StructField(i_manager_id,IntegerType,true), StructField(i_product_name,StringType,true)),false,null,,null)

== Optimized Logical Plan ==
Sort [cid#45 ASC], true
+- Project [cid#45,id1#46L,id2#47L,id3#48L,id4#49L,id5#50L,id6#51L,id7#52L,id8#53L,id9#54L,id10#55L,id11#56L,id12#57L,id13#58L,id14#59L,id15#60L]
   +- Filter havingCondition#61: boolean
      +- Aggregate [ss_customer_sk#3], [((count(ss_item_sk#2),mode=Complete,isDistinct=false) > 10) AS havingCondition#61,ss_customer_sk#3 AS cid#45,(count(CASE WHEN (i_class_id#32 = 1) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id1#46L,(count(CASE WHEN (i_class_id#32 = 2) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id2#47L,(count(CASE WHEN (i_class_id#32 = 3) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id3#48L,(count(CASE WHEN (i_class_id#32 = 4) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id4#49L,(count(CASE WHEN (i_class_id#32 = 5) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id5#50L,(count(CASE WHEN (i_class_id#32 = 6) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id6#51L,(count(CASE WHEN (i_class_id#32 = 7) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id7#52L,(count(CASE WHEN (i_class_id#32 = 8) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id8#53L,(count(CASE WHEN (i_class_id#32 = 9) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id9#54L,(count(CASE WHEN (i_class_id#32 = 10) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id10#55L,(count(CASE WHEN (i_class_id#32 = 11) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id11#56L,(count(CASE WHEN (i_class_id#32 = 12) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id12#57L,(count(CASE WHEN (i_class_id#32 = 13) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id13#58L,(count(CASE WHEN (i_class_id#32 = 14) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id14#59L,(count(CASE WHEN (i_class_id#32 = 15) THEN 1 ELSE null),mode=Complete,isDistinct=false) AS id15#60L]
         +- Project [ss_customer_sk#3,ss_item_sk#2,i_class_id#32]
            +- Join Inner, Some((ss_item_sk#2 = i_item_sk#23))
               :- Project [ss_customer_sk#3,ss_item_sk#2]
               :  +- Filter isnotnull(ss_customer_sk#3)
               :     +- Relation[ss_sold_date_sk#0,ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22] CsvRelation(<function0>,Some(/home/whassan/tmp/csv/store_sales.csv),true,,,",null,#,PERMISSIVE,COMMONS,false,false,false,StructType(StructField(ss_sold_date_sk,IntegerType,true), StructField(ss_sold_time_sk,IntegerType,true), StructField(ss_item_sk,IntegerType,true), StructField(ss_customer_sk,IntegerType,true), StructField(ss_cdemo_sk,IntegerType,true), StructField(ss_hdemo_sk,IntegerType,true), StructField(ss_addr_sk,IntegerType,true), StructField(ss_store_sk,IntegerType,true), StructField(ss_promo_sk,IntegerType,true), StructField(ss_ticket_number,IntegerType,true), StructField(ss_quantity,IntegerType,true), StructField(ss_wholesale_cost,DoubleType,true), StructField(ss_list_price,DoubleType,true), StructField(ss_sales_price,DoubleType,true), StructField(ss_ext_discount_amt,DoubleType,true), StructField(ss_ext_sales_price,DoubleType,true), StructField(ss_ext_wholesale_cost,DoubleType,true), StructField(ss_ext_list_price,DoubleType,true), StructField(ss_ext_tax,DoubleType,true), StructField(ss_coupon_amt,DoubleType,true), StructField(ss_net_paid,DoubleType,true), StructField(ss_net_paid_inc_tax,DoubleType,true), StructField(ss_net_profit,DoubleType,true)),false,null,,null)
               +- Project [i_class_id#32,i_item_sk#23]
                  +- Filter i_category#35 IN (Music)
                     +- Relation[i_item_sk#23,i_item_id#24,i_rec_start_date#25,i_rec_end_date#26,i_item_desc#27,i_current_price#28,i_wholesale_cost#29,i_brand_id#30,i_brand#31,i_class_id#32,i_class#33,i_category_id#34,i_category#35,i_manufact_id#36,i_manufact#37,i_size#38,i_formulation#39,i_color#40,i_units#41,i_container#42,i_manager_id#43,i_product_name#44] CsvRelation(<function0>,Some(/home/whassan/tmp/csv/item.csv),true,,,",null,#,PERMISSIVE,COMMONS,false,false,false,StructType(StructField(i_item_sk,IntegerType,true), StructField(i_item_id,StringType,true), StructField(i_rec_start_date,StringType,true), StructField(i_rec_end_date,StringType,true), StructField(i_item_desc,StringType,true), StructField(i_current_price,DoubleType,true), StructField(i_wholesale_cost,DoubleType,true), StructField(i_brand_id,IntegerType,true), StructField(i_brand,StringType,true), StructField(i_class_id,IntegerType,true), StructField(i_class,StringType,true), StructField(i_category_id,IntegerType,true), StructField(i_category,StringType,true), StructField(i_manufact_id,IntegerType,true), StructField(i_manufact,StringType,true), StructField(i_size,StringType,true), StructField(i_formulation,StringType,true), StructField(i_color,StringType,true), StructField(i_units,StringType,true), StructField(i_container,StringType,true), StructField(i_manager_id,IntegerType,true), StructField(i_product_name,StringType,true)),false,null,,null)

== Physical Plan ==
Sort [cid#45 ASC], true, 0
+- ConvertToUnsafe
   +- Exchange rangepartitioning(cid#45 ASC,200), None
      +- ConvertToSafe
         +- Project [cid#45,id1#46L,id2#47L,id3#48L,id4#49L,id5#50L,id6#51L,id7#52L,id8#53L,id9#54L,id10#55L,id11#56L,id12#57L,id13#58L,id14#59L,id15#60L]
            +- Filter havingCondition#61: boolean
               +- TungstenAggregate(key=[ss_customer_sk#3], functions=[(count(ss_item_sk#2),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 1) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 2) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 3) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 4) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 5) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 6) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 7) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 8) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 9) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 10) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 11) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 12) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 13) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 14) THEN 1 ELSE null),mode=Final,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 15) THEN 1 ELSE null),mode=Final,isDistinct=false)], output=[havingCondition#61,cid#45,id1#46L,id2#47L,id3#48L,id4#49L,id5#50L,id6#51L,id7#52L,id8#53L,id9#54L,id10#55L,id11#56L,id12#57L,id13#58L,id14#59L,id15#60L])
                  +- TungstenExchange hashpartitioning(ss_customer_sk#3,200), None
                     +- TungstenAggregate(key=[ss_customer_sk#3], functions=[(count(ss_item_sk#2),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 1) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 2) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 3) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 4) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 5) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 6) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 7) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 8) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 9) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 10) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 11) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 12) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 13) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 14) THEN 1 ELSE null),mode=Partial,isDistinct=false),(count(CASE WHEN (i_class_id#32 = 15) THEN 1 ELSE null),mode=Partial,isDistinct=false)], output=[ss_customer_sk#3,count#96L,count#143L,count#144L,count#145L,count#146L,count#147L,count#148L,count#149L,count#150L,count#151L,count#152L,count#153L,count#154L,count#155L,count#156L,count#157L])
                        +- Project [ss_customer_sk#3,ss_item_sk#2,i_class_id#32]
                           +- SortMergeJoin [ss_item_sk#2], [i_item_sk#23]
                              :- Sort [ss_item_sk#2 ASC], false, 0
                              :  +- TungstenExchange hashpartitioning(ss_item_sk#2,200), None
                              :     +- ConvertToUnsafe
                              :        +- Filter isnotnull(ss_customer_sk#3)
                              :           +- Scan CsvRelation(<function0>,Some(/home/whassan/tmp/csv/store_sales.csv),true,,,",null,#,PERMISSIVE,COMMONS,false,false,false,StructType(StructField(ss_sold_date_sk,IntegerType,true), StructField(ss_sold_time_sk,IntegerType,true), StructField(ss_item_sk,IntegerType,true), StructField(ss_customer_sk,IntegerType,true), StructField(ss_cdemo_sk,IntegerType,true), StructField(ss_hdemo_sk,IntegerType,true), StructField(ss_addr_sk,IntegerType,true), StructField(ss_store_sk,IntegerType,true), StructField(ss_promo_sk,IntegerType,true), StructField(ss_ticket_number,IntegerType,true), StructField(ss_quantity,IntegerType,true), StructField(ss_wholesale_cost,DoubleType,true), StructField(ss_list_price,DoubleType,true), StructField(ss_sales_price,DoubleType,true), StructField(ss_ext_discount_amt,DoubleType,true), StructField(ss_ext_sales_price,DoubleType,true), StructField(ss_ext_wholesale_cost,DoubleType,true), StructField(ss_ext_list_price,DoubleType,true), StructField(ss_ext_tax,DoubleType,true), StructField(ss_coupon_amt,DoubleType,true), StructField(ss_net_paid,DoubleType,true), StructField(ss_net_paid_inc_tax,DoubleType,true), StructField(ss_net_profit,DoubleType,true)),false,null,,null)[ss_customer_sk#3,ss_item_sk#2] PushedFilters: [IsNotNull(ss_customer_sk)]
                              +- Sort [i_item_sk#23 ASC], false, 0
                                 +- TungstenExchange hashpartitioning(i_item_sk#23,200), None
                                    +- Project [i_class_id#32,i_item_sk#23]
                                       +- Filter i_category#35 IN (Music)
                                          +- Scan CsvRelation(<function0>,Some(/home/whassan/tmp/csv/item.csv),true,,,",null,#,PERMISSIVE,COMMONS,false,false,false,StructType(StructField(i_item_sk,IntegerType,true), StructField(i_item_id,StringType,true), StructField(i_rec_start_date,StringType,true), StructField(i_rec_end_date,StringType,true), StructField(i_item_desc,StringType,true), StructField(i_current_price,DoubleType,true), StructField(i_wholesale_cost,DoubleType,true), StructField(i_brand_id,IntegerType,true), StructField(i_brand,StringType,true), StructField(i_class_id,IntegerType,true), StructField(i_class,StringType,true), StructField(i_category_id,IntegerType,true), StructField(i_category,StringType,true), StructField(i_manufact_id,IntegerType,true), StructField(i_manufact,StringType,true), StructField(i_size,StringType,true), StructField(i_formulation,StringType,true), StructField(i_color,StringType,true), StructField(i_units,StringType,true), StructField(i_container,StringType,true), StructField(i_manager_id,IntegerType,true), StructField(i_product_name,StringType,true)),false,null,,null)[i_class_id#32,i_item_sk#23,i_category#35] PushedFilters: [In(i_category,[Ljava.lang.Object;@5273143e)]

================================================================
Spark Join Algorithms:

SortMergeJoin:

BroadCastNestedLoopJoin:

SuffledHashJoin:

BroadCastHashJoin:
